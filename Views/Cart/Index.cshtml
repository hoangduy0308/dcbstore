@model List<DCBStore.Models.SessionCartItem>
@{
    ViewData["Title"] = "Giỏ hàng của bạn";
    var subtotal = ViewBag.Subtotal ?? 0m;
    var discount = ViewBag.Discount ?? 0m;
    var total = ViewBag.Total ?? subtotal;
    var appliedCouponCode = ViewBag.AppliedCouponCode as string;
}

<style>
    .quantity-input {
        width: 50px;
        text-align: center;
        border: 1px solid #dee2e6;
        border-left: none;
        border-right: none;
    }
    .quantity-btn {
        width: 38px;
        border: 1px solid #dee2e6;
        background-color: #f8f9fa;
    }
    .quantity-btn:hover {
        background-color: #e9ecef;
    }
    .remove-item-btn {
        transition: color 0.2s ease-in-out;
    }
    .remove-item-btn:hover {
        color: #dc3545 !important;
    }
</style>

<div class="container py-5">
    <div class="text-center mb-5">
        <h1 class="display-5 fw-bold">Giỏ hàng của bạn</h1>
    </div>

    @if (Model.Count > 0)
    {
        // Thêm form và Anti-Forgery Token
        <form id="cart-form">
            @Html.AntiForgeryToken()
        </form>

        <div class="row g-5">
            <div class="col-lg-8">
                @* Sửa đổi: Vùng chứa các sản phẩm trong giỏ hàng *@
                <div id="cart-items-container">
                    <partial name="_CartItemsPartial" model="Model" />
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card border-0 shadow-sm" style="position: sticky; top: 100px;">
                    <div class="card-body">
                        <h4 class="card-title mb-4">Tóm tắt đơn hàng</h4>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-2">
                                <span>Tạm tính</span>
                                <span id="summary-subtotal">@subtotal.ToString("N0") VNĐ</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-2">
                                <span>Giảm giá</span>
                                <span class="text-danger" id="summary-discount">- @discount.ToString("N0") VNĐ</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center border-top px-0 pt-3">
                                <strong class="fs-5">Tổng cộng</strong>
                                <strong class="fs-5 text-primary" id="summary-total">@total.ToString("N0") VNĐ</strong>
                            </li>
                        </ul>
                        <a asp-controller="Checkout" asp-action="Index" asp-route-fromCart="true" class="btn btn-primary btn-lg w-100">Tiến hành Thanh toán</a>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
            <p class="lead">Giỏ hàng của bạn đang trống.</p>
            <a asp-controller="Home" asp-action="Index" class="btn btn-primary mt-3">Tiếp tục mua sắm</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            
            const getToken = () => $('#cart-form input[name="__RequestVerificationToken"]').val();

            // Hàm cập nhật toàn bộ UI
            function updateCartUI(data) {
                $('#cart-items-container').html(data.cartHtml);
                $('#summary-subtotal').text(data.subtotal + ' VNĐ');
                $('#summary-discount').text('- ' + data.discount + ' VNĐ');
                $('#summary-total').text(data.total + ' VNĐ');
                $('#cart-item-count').text(data.newCartCount);

                if(data.newCartCount === 0){
                    // Nếu giỏ hàng trống, tải lại trang để hiển thị thông báo "Giỏ hàng trống"
                    window.location.reload();
                }
            }
            
            // Xử lý sự kiện click cho toàn bộ container
            $('#cart-items-container').on('click', '.quantity-btn, .remove-item-btn', function(e) {
                e.preventDefault();
                const btn = $(this);
                const productId = btn.data('productid');
                let url = '';

                if (btn.hasClass('increase-qty')) {
                    url = '@Url.Action("IncreaseQuantity", "Cart")';
                } else if (btn.hasClass('decrease-qty')) {
                    url = '@Url.Action("DecreaseQuantity", "Cart")';
                } else if (btn.hasClass('remove-item-btn')) {
                    if(!confirm('Bạn có chắc muốn xóa sản phẩm này khỏi giỏ hàng?')) {
                        return;
                    }
                    url = '@Url.Action("RemoveFromCart", "Cart")';
                }

                if (!url) return;

                // Hiển thị trạng thái loading
                btn.prop('disabled', true);

                $.ajax({
                    url: url,
                    type: 'POST',
                    headers: { "RequestVerificationToken": getToken() },
                    data: { productId: productId },
                    success: function(response) {
                        if (response.success) {
                            updateCartUI(response);
                        } else {
                            showNotification(response.message || 'Thao tác thất bại.', 'error');
                        }
                    },
                    error: function() {
                        showNotification('Đã có lỗi xảy ra. Vui lòng thử lại.', 'error');
                    },
                    complete: function() {
                        // Bỏ trạng thái loading cho tất cả các nút (đề phòng)
                        $('.quantity-btn, .remove-item-btn').prop('disabled', false);
                    }
                });
            });
        });
    </script>
}