@model DCBStore.Models.Product
@{
    ViewData["Title"] = Model.Name;
    var firstImage = Model.Images?.FirstOrDefault()?.Url ?? "/images/placeholder.png";
}

<style>
    .main-product-image {
        height: 500px;
        width: 100%;
        object-fit: contain;
        border: 1px solid #dee2e6;
        border-radius: 0.5rem;
        cursor: pointer;
    }
    .thumbnail-list {
        display: flex;
        gap: 10px;
        margin-top: 15px;
        flex-wrap: wrap;
    }
    .thumbnail-item {
        width: 80px;
        height: 80px;
        object-fit: contain;
        border: 2px solid #dee2e6;
        border-radius: 0.25rem;
        cursor: pointer;
        transition: border-color 0.2s;
    }
    .thumbnail-item.active,
    .thumbnail-item:hover {
        border-color: var(--bs-primary);
    }
</style>

<div class="container mt-5">
    <div class="row">
        <div class="col-lg-6">
            <img id="main-product-image" src="@firstImage" class="img-fluid main-product-image" alt="@Model.Name">
            
            <div id="thumbnail-container" class="thumbnail-list">
                @if (Model.Images != null && Model.Images.Count > 1)
                {
                    foreach (var image in Model.Images)
                    {
                        <img src="@image.Url" class="thumbnail-item @(image.Url == firstImage ? "active" : "")" data-large-src="@image.Url" alt="Thumbnail">
                    }
                }
            </div>
        </div>

        <div class="col-lg-6">
            <h1 class="display-5">@Model.Name</h1>
            <p class="text-muted">Danh mục: <a asp-controller="Products" asp-action="Index" asp-route-categoryId="@Model.CategoryId">@Model.Category.Name</a></p>
            <hr>
            <p class="lead">@Model.Description</p>
            
            <h3 class="my-3" style="color: #d9534f;">@Model.Price.ToString("N0") VNĐ</h3>
            
            @if(Model.Stock > 0)
            {
                <p class="text-success fw-bold">Còn hàng (còn lại @Model.Stock sản phẩm)</p>
            }
            else
            {
                <p class="text-danger fw-bold">Hết hàng</p>
            }

            <form id="add-to-cart-form" class="mt-4">
                <input type="hidden" name="productId" value="@Model.Id" />
                <div class="d-grid gap-2">
                     <button type="submit" id="add-to-cart-btn" class="btn btn-primary btn-lg" @(Model.Stock > 0 ? "" : "disabled")>
                        <i class="fas fa-cart-plus me-2"></i> 
                        @(Model.Stock > 0 ? "Thêm vào giỏ hàng" : "Hết hàng")
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Xử lý thư viện ảnh
            const mainImage = document.getElementById('main-product-image');
            const thumbnailContainer = document.getElementById('thumbnail-container');

            if (thumbnailContainer) {
                thumbnailContainer.addEventListener('click', function(e) {
                    if (e.target.classList.contains('thumbnail-item')) {
                        // Cập nhật ảnh chính
                        mainImage.src = e.target.dataset.largeSrc;
                        
                        // Cập nhật trạng thái active
                        thumbnailContainer.querySelectorAll('.thumbnail-item').forEach(thumb => thumb.classList.remove('active'));
                        e.target.classList.add('active');
                    }
                });
            }

            // Xử lý thêm vào giỏ hàng
            const form = document.getElementById('add-to-cart-form');
            if(form) {
                form.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    const productId = this.querySelector('input[name="productId"]').value;
                    const btn = this.querySelector('#add-to-cart-btn');
                    const originalText = btn.innerHTML;
                    
                    btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang thêm...';
                    btn.disabled = true;

                    fetch(`/Cart/AddToCart?productId=${productId}`, {
                        method: 'POST',
                        headers: {
                           "RequestVerificationToken": document.getElementsByName('__RequestVerificationToken')[0]?.value
                        },
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert(data.message); // Hoặc hiển thị toast notification
                            const cartCountSpan = document.getElementById('cart-item-count');
                            if (cartCountSpan) {
                                cartCountSpan.innerText = data.newCartCount;
                            }
                        } else {
                            alert(`Lỗi: ${data.message}`);
                        }
                    })
                    .catch(error => {
                        console.error('Lỗi khi thêm vào giỏ hàng:', error);
                        alert('Đã có lỗi xảy ra.');
                    })
                    .finally(() => {
                        btn.innerHTML = originalText;
                        btn.disabled = @(Model.Stock > 0 ? "false" : "true");
                    });
                });
            }
        });
    </script>
}