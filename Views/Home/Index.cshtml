@model IEnumerable<DCBStore.Models.Product>
@{
    ViewData["Title"] = "Trang Chủ";
    int currentPage = (int)(ViewData["CurrentPage"] ?? 1);
    int totalPages = (int)(ViewData["TotalPages"] ?? 1);
    string currentFilter = ViewData["CurrentFilter"] as string;
}

<style>
    .product-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        border-radius: 1rem;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, .15);
    }

    .product-card-img-container {
        overflow: hidden;
        border-top-left-radius: 1rem;
        border-top-right-radius: 1rem;
        height: 250px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #fff;
    }

    .product-card-img-container img {
        height: 100%;
        width: 100%;
        object-fit: contain;
    }

    .add-to-cart-btn {
        transition: all 0.2s ease;
    }

    #toast-notification {
        position: fixed;
        bottom: 2rem;
        right: 2rem;
        background-color: #28a745;
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 0.5rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, .1);
        z-index: 1050;
        opacity: 0;
        visibility: hidden;
        transform: translateY(20px);
        transition: all 0.3s ease-in-out;
    }

    #toast-notification.show {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
    }

    .pagination .page-link {
        border-radius: 0.25rem;
        margin: 0 0.25rem;
    }

    .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        color: #fff;
        border-color: #0d6efd;
    }
</style>

<div class="container py-5">
    <div class="text-center mb-5">
        <h2 class="fw-bold display-6">Sản phẩm Nổi bật</h2>
        <p class="text-muted">Khám phá những sản phẩm được yêu thích nhất tại DCBStore</p>
    </div>

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <p class="lead">Không tìm thấy sản phẩm nào.</p>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
            @foreach (var product in Model)
            {
                <div class="col">
                    <div class="card h-100 border-0 shadow-sm product-card">
                        <div class="product-card-img-container">
                            <a asp-area="" asp-controller="Products" asp-action="Details" asp-route-id="@product.Id">
                                <img src="@product.ImageUrl" alt="@product.Name" class="card-img-top">
                            </a>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title h6">
                                <a asp-area="" asp-controller="Products" asp-action="Details" asp-route-id="@product.Id"
                                   class="text-dark text-decoration-none stretched-link">@product.Name</a>
                            </h5>
                            <p class="card-text small text-muted flex-grow-1">@product.Description</p>
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <p class="card-text fw-bold text-primary mb-0">@product.Price.ToString("N0") VNĐ</p>
                                <button class="btn btn-outline-primary border-2 rounded-circle add-to-cart-btn"
                                        data-productid="@product.Id" title="Thêm vào giỏ hàng" style="z-index: 2;">
                                    <i class="fas fa-cart-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (totalPages > 1)
        {
            <nav class="mt-5 d-flex justify-content-center" aria-label="Product navigation">
                <ul class="pagination">
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage - 1)"
                           asp-route-searchString="@currentFilter">&laquo;</a>
                    </li>

                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@i"
                               asp-route-searchString="@currentFilter">@i</a>
                        </li>
                    }

                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(currentPage + 1)"
                           asp-route-searchString="@currentFilter">&raquo;</a>
                    </li>
                </ul>
            </nav>
        }
    }
</div>

<div id="toast-notification">
    <i class="fas fa-check-circle me-2"></i>
    <span id="toast-message"></span>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');
            const toastElement = document.getElementById('toast-notification');
            const toastMessage = document.getElementById('toast-message');

            function showToast(message) {
                toastMessage.textContent = message;
                toastElement.classList.add('show');
                setTimeout(() => {
                    toastElement.classList.remove('show');
                }, 3000);
            }

            addToCartButtons.forEach(button => {
                button.addEventListener('click', function (event) {
                    event.preventDefault();
                    event.stopPropagation();

                    const productId = this.dataset.productid;

                    fetch(`/Cart/AddToCart?productId=${productId}`, {
                        method: 'POST',
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                const cartCountSpan = document.getElementById('cart-item-count');
                                if (cartCountSpan) {
                                    cartCountSpan.innerText = data.newCartCount;
                                }
                                showToast(data.message);
                            } else {
                                showToast('Lỗi: ' + data.message);
                            }
                        })
                        .catch(error => {
                            console.error('Lỗi khi thêm vào giỏ hàng:', error);
                            showToast('Đã có lỗi xảy ra, vui lòng thử lại.');
                        });
                });
            });
        });
    </script>
}