@model DCBStore.Areas.Admin.Models.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
    var revenueByMonth = ViewBag.RevenueByMonth as IEnumerable<dynamic>;
    var ordersByMonth = ViewBag.OrdersByMonth as IEnumerable<dynamic>;
}

<h2 class="mb-4">Dashboard thống kê cửa hàng</h2>

<div class="row g-4 mb-4">
    <div class="col-xl-3 col-md-6">
        <div class="stat-widget widget-orders h-100">
            <div class="stat-widget-info">
                <h6 class="stat-title">Tổng đơn hàng</h6>
                <p class="stat-metric">@ViewBag.TotalOrders</p>
                @if (Model.OrdersChangePercentage != 0)
                {
                    var trendClass = Model.OrdersChangePercentage > 0 ? "text-success" : "text-danger";
                    var iconClass = Model.OrdersChangePercentage > 0 ? "fa-arrow-up" : "fa-arrow-down";
                    <p class="stat-trend @trendClass mb-0">
                        <i class="fas @iconClass"></i> @Model.OrdersChangePercentage.ToString("F1")%
                        <span class="text-muted fw-normal"> so với tháng trước</span>
                    </p>
                }
            </div>
            <div class="stat-widget-icon">
                <i class="fas fa-file-invoice-dollar"></i>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="stat-widget widget-products h-100">
            <div class="stat-widget-info">
                <h6 class="stat-title">Tổng sản phẩm</h6>
                <p class="stat-metric">@ViewBag.TotalProducts</p>
            </div>
            <div class="stat-widget-icon">
                <i class="fas fa-box-open"></i>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="stat-widget widget-users h-100">
            <div class="stat-widget-info">
                <h6 class="stat-title">Tổng người dùng</h6>
                <p class="stat-metric">@ViewBag.TotalUsers</p>
                 @if (Model.UsersChangePercentage != 0)
                {
                    var trendClass = Model.UsersChangePercentage > 0 ? "text-success" : "text-danger";
                    var iconClass = Model.UsersChangePercentage > 0 ? "fa-arrow-up" : "fa-arrow-down";
                    <p class="stat-trend @trendClass mb-0">
                        <i class="fas @iconClass"></i> @Model.UsersChangePercentage.ToString("F1")%
                        <span class="text-muted fw-normal"> so với tháng trước</span>
                    </p>
                }
            </div>
            <div class="stat-widget-icon">
                <i class="fas fa-users"></i>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6">
        <div class="stat-widget widget-revenue h-100">
            <div class="stat-widget-info">
                <h6 class="stat-title">Doanh thu tháng này</h6>
                <p class="stat-metric">@Model.MonthlyRevenue.ToString("N0")<small> ₫</small></p>
                @if (Model.RevenueChangePercentage != 0)
                {
                    var trendClass = Model.RevenueChangePercentage > 0 ? "text-success" : "text-danger";
                    var iconClass = Model.RevenueChangePercentage > 0 ? "fa-arrow-up" : "fa-arrow-down";
                    <p class="stat-trend @trendClass mb-0">
                        <i class="fas @iconClass"></i> @Model.RevenueChangePercentage.ToString("F1")%
                        <span class="text-muted fw-normal"> so với tháng trước</span>
                    </p>
                }
            </div>
            <div class="stat-widget-icon">
                <i class="fas fa-dollar-sign"></i>
            </div>
        </div>
    </div>
</div>

<div class="row g-4 mb-4">
    <div class="col-lg-4">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body text-center p-4">
                <h6>Đơn mới hôm nay</h6>
                <span class="fs-2 fw-bold text-primary">@Model.NewOrdersToday</span>
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body text-center p-4">
                <h6>Đơn chờ xử lý</h6>
                <span class="fs-2 fw-bold text-warning">@Model.PendingOrders</span>
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body text-center p-4">
                <h6>Người dùng mới tháng này</h6>
                <span class="fs-2 fw-bold text-info">@Model.NewUsersThisMonth</span>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6 mb-4">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Doanh thu theo tháng</h5>
                <canvas id="revenueChart" height="200"></canvas>
            </div>
        </div>
    </div>
    <div class="col-lg-6 mb-4">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Số đơn hàng theo tháng</h5>
                <canvas id="ordersChart" height="200"></canvas>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const revenueLabels = [@Html.Raw(string.Join(",", revenueByMonth.Select(item => $"'Thg {item.Month}/{item.Year}'")))];
        const revenueData = [@Html.Raw(string.Join(",", revenueByMonth.Select(item => item.TotalRevenue)))];

        const orderLabels = [@Html.Raw(string.Join(",", ordersByMonth.Select(item => $"'Thg {item.Month}/{item.Year}'")))];
        const orderData = [@Html.Raw(string.Join(",", ordersByMonth.Select(item => item.Count)))];
        
        new Chart(document.getElementById('revenueChart').getContext('2d'), {
            type: 'line',
            data: {
                labels: revenueLabels,
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: revenueData,
                    fill: false,
                    borderColor: 'rgb(75, 192, 192)',
                    borderWidth: 3,
                    tension: 0.2,
                    pointRadius: 5
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: true } }
            }
        });

        new Chart(document.getElementById('ordersChart').getContext('2d'), {
            type: 'bar',
            data: {
                labels: orderLabels,
                datasets: [{
                    label: 'Số đơn hàng',
                    data: orderData,
                    backgroundColor: 'rgba(54, 162, 235, 0.6)'
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } }
            }
        });
    </script>
}